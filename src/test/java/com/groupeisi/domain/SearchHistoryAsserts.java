package com.groupeisi.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SearchHistoryAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSearchHistoryAllPropertiesEquals(SearchHistory expected, SearchHistory actual) {
        assertSearchHistoryAutoGeneratedPropertiesEquals(expected, actual);
        assertSearchHistoryAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSearchHistoryAllUpdatablePropertiesEquals(SearchHistory expected, SearchHistory actual) {
        assertSearchHistoryUpdatableFieldsEquals(expected, actual);
        assertSearchHistoryUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSearchHistoryAutoGeneratedPropertiesEquals(SearchHistory expected, SearchHistory actual) {
        assertThat(expected)
            .as("Verify SearchHistory auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSearchHistoryUpdatableFieldsEquals(SearchHistory expected, SearchHistory actual) {
        assertThat(expected)
            .as("Verify SearchHistory relevant properties")
            .satisfies(e -> assertThat(e.getSearchedDate()).as("check searchedDate").isEqualTo(actual.getSearchedDate()))
            .satisfies(e -> assertThat(e.getDayOfWeek()).as("check dayOfWeek").isEqualTo(actual.getDayOfWeek()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSearchHistoryUpdatableRelationshipsEquals(SearchHistory expected, SearchHistory actual) {}
}
